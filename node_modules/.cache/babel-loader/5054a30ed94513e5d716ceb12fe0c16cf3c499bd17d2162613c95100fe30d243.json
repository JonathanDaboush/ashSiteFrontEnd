{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Documents\\\\ashfrontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Main from './Main/Main';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Container } from 'react-bootstrap';\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  const handleResize = () => {\n    setWindowSize({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n  };\n  useEffect(() => {\n    // Add event listener to handle window resize\n    window.addEventListener('resize', handleResize);\n\n    // Remove event listener on component unmount\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-dark\",\n      children: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"/GUplLJZB3rDGHbeTKe0oRDkFco=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Main","Container","React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","windowSize","setWindowSize","width","window","innerWidth","height","innerHeight","handleResize","addEventListener","removeEventListener","fluid","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Jonathan/Documents/ashfrontend/src/App.js"],"sourcesContent":["import './App.css';\nimport Main from './Main/Main';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Container } from 'react-bootstrap';\nimport React, { useEffect, useState } from \"react\";\nconst App = () => {\n\n    const [windowSize, setWindowSize] = useState({\n      width: window.innerWidth,\n      height: window.innerHeight,\n    });\n  \n    const handleResize = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    };\n  \n    useEffect(() => {\n      // Add event listener to handle window resize\n      window.addEventListener('resize', handleResize);\n  \n      // Remove event listener on component unmount\n      return () => {\n        window.removeEventListener('resize', handleResize);\n      };\n    }, []);\n\n  return (\n    <Container fluid>\n      <div   className=\"bg-dark\" >\n        <Main />\n      </div>\n    </Container>\n  );\n};\n\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,IAAI,MAAM,aAAa;AAC9B,OAAO,kCAAkC;AACzC,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEd,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC;IAC3CO,KAAK,EAAEC,MAAM,CAACC,UAAU;IACxBC,MAAM,EAAEF,MAAM,CAACG;EACjB,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBN,aAAa,CAAC;MACZC,KAAK,EAAEC,MAAM,CAACC,UAAU;MACxBC,MAAM,EAAEF,MAAM,CAACG;IACjB,CAAC,CAAC;EACJ,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACd;IACAS,MAAM,CAACK,gBAAgB,CAAC,QAAQ,EAAED,YAAY,CAAC;;IAE/C;IACA,OAAO,MAAM;MACXJ,MAAM,CAACM,mBAAmB,CAAC,QAAQ,EAAEF,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAER,oBACEV,OAAA,CAACL,SAAS;IAACkB,KAAK;IAAAC,QAAA,eACdd,OAAA;MAAOe,SAAS,EAAC,SAAS;MAAAD,QAAA,eACxBd,OAAA,CAACN,IAAI;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAACjB,EAAA,CA/BID,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAkCT,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}