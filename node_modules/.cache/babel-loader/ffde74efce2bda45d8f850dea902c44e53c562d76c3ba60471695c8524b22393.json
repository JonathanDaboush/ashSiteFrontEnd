{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Documents\\\\ashfrontend\\\\src\\\\Main\\\\ImageSlider.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ReactDOM from 'react-dom/client';\nimport Image from \"../Models/Image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ImageSlider(props) {\n  _s();\n  let [images, setImages] = useState(props.images);\n  let [counter, setCounter] = useState(0);\n  let [fImage, setFImage] = useState([]);\n  let [newImage, setNewImage] = useState(false);\n  const focusSlides = () => {\n    let updatedImage = props.images;\n    if (updatedImage == undefined) {\n      setImages([]);\n    } else {\n      let thisList = props.images;\n      let newSlides = [];\n      for (let i = 0; i < thisList.length; i++) {\n        if (counter >= 0 && counter < thisList.length && Math.abs(i - counter) <= 2) {\n          newSlides.push(thisList[i]);\n        }\n      }\n      setFImage(newSlides);\n      setImages(props.images);\n    }\n  };\n  useEffect(() => {\n    focusSlides();\n    if (props.ReadStatus) {\n      setNewImage(true);\n    } else {\n      setNewImage(false);\n    }\n  }, [props.images, counter]);\n  let deleteImage = async number => {\n    if (number != 0) {\n      if (counter === number) {\n        setCounter(number - 1);\n      }\n      if (number === images.length - 1) {\n        let newImages = [...images]; // Create a new copy of the images array\n        newImages.pop();\n        setImages(newImages);\n        props.save(newImages);\n      }\n    } else {\n      let newImages = [...images]; // Create a new copy of the images array\n      newImages.splice(number, 1);\n      setImages(newImages);\n      props.save(newImages);\n    }\n  };\n  let saveImage = (image, description, name) => {\n    let newImage = {\n      name: name,\n      description: description,\n      base64: image,\n      id: images[counter].id\n    };\n    let newImages = [...images]; // Create a new copy of the images array\n    newImages[counter] = newImage;\n    setImages(newImages);\n    focusSlides();\n  };\n  let step = value => {\n    if (value < images.length && value >= 0) {\n      setCounter(value);\n      focusSlides();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: props.title ? '50%' : '100%',\n      maxWidth: '1200px',\n      // Set a maximum width to prevent it from growing too wide\n      margin: '0 auto' // Centers the container horizontally\n      // Add other styles as needed\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row imageSlider\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-2\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            step(counter - 1);\n          },\n          className: \"btn btn-dark\",\n          style: {\n            width: '100%',\n            height: '100%'\n          },\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), images !== undefined && images.length !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-2\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            step(counter + 1);\n          },\n          className: \"btn btn-dark\",\n          style: {\n            width: '100%',\n            height: '100%'\n          },\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row imageSlider\",\n      children: images !== undefined && images.length > 1 ? fImage.map((image, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => step(i),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/jpeg;base64,${image.base64}`,\n            alt: image.name,\n            className: \"img-fluid h-100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 7\n  }, this);\n}\n_s(ImageSlider, \"k4aU18Lp5gX0Wj6aKFSBPIRLwMA=\");\n_c = ImageSlider;\nexport default ImageSlider;\nvar _c;\n$RefreshReg$(_c, \"ImageSlider\");","map":{"version":3,"names":["React","useEffect","useState","ReactDOM","Image","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageSlider","props","_s","images","setImages","counter","setCounter","fImage","setFImage","newImage","setNewImage","focusSlides","updatedImage","undefined","thisList","newSlides","i","length","Math","abs","push","ReadStatus","deleteImage","number","newImages","pop","save","splice","saveImage","image","description","name","base64","id","step","value","style","width","title","maxWidth","margin","children","className","onClick","height","fileName","_jsxFileName","lineNumber","columnNumber","map","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Jonathan/Documents/ashfrontend/src/Main/ImageSlider.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport ReactDOM from 'react-dom/client';\r\nimport Image from \"../Models/Image\";\r\n\r\nfunction ImageSlider(props){\r\n  let [images, setImages] = useState(props.images);\r\n  let [counter,setCounter]=useState(0);\r\n  let [fImage,setFImage]=useState([]);\r\nlet [newImage,setNewImage]=useState(false);\r\n\r\n  const focusSlides = () => {\r\n   let updatedImage = props.images;\r\n    if(updatedImage==undefined){\r\n      setImages([]);\r\n    }\r\n    else{\r\n        let thisList=props.images;\r\n        let newSlides = [];\r\n        for (let i = 0; i < thisList.length; i++) {\r\n          if (counter >= 0 && counter < thisList.length && Math.abs(i - counter) <= 2) {\r\n            newSlides.push(thisList[i]);\r\n          }\r\n        }\r\n        setFImage(newSlides);\r\n        setImages(props.images);\r\n    }\r\n   \r\n    \r\n  };\r\n\r\n  useEffect(() => {\r\n   \r\n      focusSlides();\r\n      if(props.ReadStatus){\r\n          setNewImage(true);\r\n      }\r\n      else{\r\n        setNewImage(false);\r\n      }\r\n  }, [props.images, counter]);\r\n  \r\n\r\n  let deleteImage = async (number) => {\r\n    if(number!=0){\r\n    if(counter===number ){setCounter(number-1)}\r\n    if(number===images.length-1 ){\r\n      let newImages = [...images]; // Create a new copy of the images array\r\n      newImages.pop();\r\n      setImages(newImages);\r\n      props.save(newImages);}\r\n    }\r\n    else{\r\n    let newImages = [...images]; // Create a new copy of the images array\r\n    newImages.splice(number, 1);\r\n    setImages(newImages);\r\n    props.save(newImages);}\r\n  };\r\n\r\n  let saveImage = (image, description, name) => {\r\n\r\n    \r\n      let newImage = { name: name, description: description, base64: image, id: images[counter].id };\r\n      let newImages = [...images]; // Create a new copy of the images array\r\n      newImages[counter] = newImage;\r\n      setImages(newImages);\r\n      focusSlides();\r\n    };\r\n\r\n      \r\n  let step=(value)=>{\r\n      if(value<images.length && value>=0){\r\n        setCounter(value);\r\n        \r\n        focusSlides();\r\n      }\r\n        \r\n    }\r\n\r\n    return (\r\n      <div style={{\r\n        width: props.title ? '50%' : '100%',\r\n        maxWidth: '1200px', // Set a maximum width to prevent it from growing too wide\r\n        margin: '0 auto', // Centers the container horizontally\r\n        // Add other styles as needed\r\n      }}>\r\n        <div className=\"row imageSlider\">\r\n          <div className=\"col-sm-2\">\r\n            <button\r\n              onClick={() => { step(counter - 1) }}\r\n              className=\"btn btn-dark\" style={{ width: '100%', height: '100%' }}\r\n            >\r\n              &lt;\r\n            </button>\r\n          </div>\r\n    \r\n          {(images !== undefined && images.length !== 0) && (\r\n            <div className=\"col-sm-8\">\r\n              {/* Your Image component goes here */}\r\n            </div>\r\n          )}\r\n    \r\n          <div className=\"col-sm-2\">\r\n            <button\r\n              onClick={() => { step(counter + 1) }}\r\n              className=\"btn btn-dark\"  style={{ width: '100%', height: '100%' }}\r\n            >\r\n              &gt;\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"row imageSlider\">\r\n          {images !== undefined && images.length > 1 ? (\r\n            fImage.map((image, i) => (\r\n              <div key={i} className=\"col-4\">\r\n                <a onClick={() => step(i)}>\r\n                  <img src={`data:image/jpeg;base64,${image.base64}`} alt={image.name} className=\"img-fluid h-100\" />\r\n                </a>\r\n              </div>\r\n            ))\r\n          ) : <></>}\r\n        </div>\r\n      </div>\r\n    );\r\n    \r\n    \r\n    \r\n      \r\n}\r\nexport default ImageSlider;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}