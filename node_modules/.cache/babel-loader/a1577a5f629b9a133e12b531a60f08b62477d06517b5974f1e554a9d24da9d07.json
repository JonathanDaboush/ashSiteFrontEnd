{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Documents\\\\ashfrontend\\\\src\\\\Main\\\\PersonInserter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport AutoSuggest from \"./AutoSuggest\";\nimport { Person } from \"../Models/Person\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PersonInserter(props) {\n  _s();\n  let [people, setPeople] = useState([]);\n  let [names, setNames] = useState(\"\");\n  useEffect(() => {\n    getInitNames();\n  }, []);\n  let getInitNames = () => {\n    let newNames = [];\n    for (let person of props.people) {\n      newNames.push(person.name);\n    }\n    setNames(newNames);\n    getPeople(newNames);\n  };\n  let getPeople = e => {\n    let newPeople = [];\n    for (let person of props.people) {\n      if (e.includes(person.name)) {\n        newPeople.push(person);\n      }\n    }\n    setPeople(newPeople);\n    props.updatePeople(newPeople);\n  };\n  let updateList = async e => {\n    setNames(e);\n    getPeople(e);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.edit == true && /*#__PURE__*/_jsxDEV(AutoSuggest, {\n      oldSuggestions: props.oldSuggestions,\n      suggestions: props.people,\n      updateList: e => {\n        updateList(e);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: people.map((person, i) => /*#__PURE__*/_jsxDEV(Person, {\n        name: person.name,\n        description: person.description,\n        opinions: person.opinions,\n        id: person.id,\n        title: true,\n        upCounter: () => {},\n        edit: false,\n        target: s => {},\n        images: person.images\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 37\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 13\n  }, this);\n}\n_s(PersonInserter, \"VXGCO6qta/IF3fxk8Dmu6PVIeeQ=\");\n_c = PersonInserter;\nexport default PersonInserter;\nvar _c;\n$RefreshReg$(_c, \"PersonInserter\");","map":{"version":3,"names":["React","useEffect","useState","AutoSuggest","Person","jsxDEV","_jsxDEV","PersonInserter","props","_s","people","setPeople","names","setNames","getInitNames","newNames","person","push","name","getPeople","e","newPeople","includes","updatePeople","updateList","children","edit","oldSuggestions","suggestions","fileName","_jsxFileName","lineNumber","columnNumber","map","i","description","opinions","id","title","upCounter","target","s","images","_c","$RefreshReg$"],"sources":["C:/Users/Jonathan/Documents/ashfrontend/src/Main/PersonInserter.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport AutoSuggest from \"./AutoSuggest\";\r\nimport { Person } from \"../Models/Person\";\r\n\r\nfunction PersonInserter(props) {\r\n    let [people, setPeople] = useState([]);\r\n    let [names, setNames] = useState(\"\");\r\n    \r\n    useEffect(() => {\r\n        getInitNames();\r\n    }, []);\r\n  \r\nlet getInitNames=()=>{\r\n    let newNames=[];\r\n    for(let person of props.people){\r\n        newNames.push(person.name);\r\n    }\r\n    setNames(newNames);\r\n    getPeople(newNames);\r\n}\r\n    let getPeople = (e) => {\r\n        let newPeople=[];\r\n        for(let person of props.people){\r\n            if( e.includes(person.name)){\r\n                newPeople.push(person);\r\n            }\r\n        }\r\n        setPeople(newPeople);\r\n        props.updatePeople(newPeople);\r\n    };\r\n    let updateList=async(e)=>{\r\n        setNames(e);\r\n        getPeople(e)\r\n    }\r\n    return( <div>\r\n\r\n        {props.edit==true && <AutoSuggest oldSuggestions={props.oldSuggestions} suggestions={props.people} updateList={(e)=>{updateList(e)}} />}\r\n        <div>\r\n        {people.map((person, i) => (<Person name={person.name} description={person.description} opinions={person.opinions} id={person.id} title={true} key={i} upCounter={() => {}} edit={false} target={(s) => {}} images={person.images} />))}\r\n\r\n        </div>\r\n    </div>);\r\n}\r\nexport default PersonInserter;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,cAAcA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC3B,IAAI,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,IAAI,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACZa,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEV,IAAIA,YAAY,GAACA,CAAA,KAAI;IACjB,IAAIC,QAAQ,GAAC,EAAE;IACf,KAAI,IAAIC,MAAM,IAAIR,KAAK,CAACE,MAAM,EAAC;MAC3BK,QAAQ,CAACE,IAAI,CAACD,MAAM,CAACE,IAAI,CAAC;IAC9B;IACAL,QAAQ,CAACE,QAAQ,CAAC;IAClBI,SAAS,CAACJ,QAAQ,CAAC;EACvB,CAAC;EACG,IAAII,SAAS,GAAIC,CAAC,IAAK;IACnB,IAAIC,SAAS,GAAC,EAAE;IAChB,KAAI,IAAIL,MAAM,IAAIR,KAAK,CAACE,MAAM,EAAC;MAC3B,IAAIU,CAAC,CAACE,QAAQ,CAACN,MAAM,CAACE,IAAI,CAAC,EAAC;QACxBG,SAAS,CAACJ,IAAI,CAACD,MAAM,CAAC;MAC1B;IACJ;IACAL,SAAS,CAACU,SAAS,CAAC;IACpBb,KAAK,CAACe,YAAY,CAACF,SAAS,CAAC;EACjC,CAAC;EACD,IAAIG,UAAU,GAAC,MAAMJ,CAAC,IAAG;IACrBP,QAAQ,CAACO,CAAC,CAAC;IACXD,SAAS,CAACC,CAAC,CAAC;EAChB,CAAC;EACD,oBAAQd,OAAA;IAAAmB,QAAA,GAEHjB,KAAK,CAACkB,IAAI,IAAE,IAAI,iBAAIpB,OAAA,CAACH,WAAW;MAACwB,cAAc,EAAEnB,KAAK,CAACmB,cAAe;MAACC,WAAW,EAAEpB,KAAK,CAACE,MAAO;MAACc,UAAU,EAAGJ,CAAC,IAAG;QAACI,UAAU,CAACJ,CAAC,CAAC;MAAA;IAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvI1B,OAAA;MAAAmB,QAAA,EACCf,MAAM,CAACuB,GAAG,CAAC,CAACjB,MAAM,EAAEkB,CAAC,kBAAM5B,OAAA,CAACF,MAAM;QAACc,IAAI,EAAEF,MAAM,CAACE,IAAK;QAACiB,WAAW,EAAEnB,MAAM,CAACmB,WAAY;QAACC,QAAQ,EAAEpB,MAAM,CAACoB,QAAS;QAACC,EAAE,EAAErB,MAAM,CAACqB,EAAG;QAACC,KAAK,EAAE,IAAK;QAASC,SAAS,EAAEA,CAAA,KAAM,CAAC,CAAE;QAACb,IAAI,EAAE,KAAM;QAACc,MAAM,EAAGC,CAAC,IAAK,CAAC,CAAE;QAACC,MAAM,EAAE1B,MAAM,CAAC0B;MAAO,GAA9ER,CAAC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA+E,CAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAElO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AACV;AAACvB,EAAA,CAtCQF,cAAc;AAAAoC,EAAA,GAAdpC,cAAc;AAuCvB,eAAeA,cAAc;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}