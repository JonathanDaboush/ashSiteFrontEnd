{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Documents\\\\ashfrontend\\\\src\\\\Main\\\\PersonInserter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport AutoSuggest from \"./AutoSuggest\";\nimport { Person } from \"../Models/Person\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PersonInserter(props) {\n  _s();\n  let [people, setPeople] = useState([]);\n  let [names, setNames] = useState(\"\");\n  useEffect(() => {\n    getInitNames();\n  }, []);\n  let getInitNames = () => {\n    let newNames = [];\n    for (let person of props.oldSuggestions) {\n      newNames.push(person.name);\n    }\n    setNames(newNames);\n    let newPeople = [];\n    for (let person of props.people) {\n      if (newNames.includes(person.name)) {\n        newPeople.push(person);\n      }\n    }\n    setPeople(newPeople);\n  };\n  let getPeople = e => {\n    let newPeople = [];\n    for (let person of props.people) {\n      if (e.includes(person.name)) {\n        newPeople.push(person);\n      }\n    }\n    setPeople(newPeople);\n    props.updatePeople(newPeople);\n  };\n  let updateList = async e => {\n    setNames(e);\n    getPeople(e);\n  };\n  let del = i => {\n    return () => {\n      let newPeople = [...people];\n      newPeople.splice(i, 1);\n      setPeople(newPeople);\n      props.updatePeople(newPeople);\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.edit == true && /*#__PURE__*/_jsxDEV(AutoSuggest, {\n      oldSuggestions: people,\n      suggestions: props.people,\n      updateList: e => {\n        updateList(e);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.edit ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: people.map((person, i) => /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"bg-dark text-white\",\n          href: \"#\",\n          onClick: () => del(i),\n          children: person.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: people.map((person, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: person.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 13\n  }, this);\n}\n_s(PersonInserter, \"VXGCO6qta/IF3fxk8Dmu6PVIeeQ=\");\n_c = PersonInserter;\nexport default PersonInserter;\nvar _c;\n$RefreshReg$(_c, \"PersonInserter\");","map":{"version":3,"names":["React","useEffect","useState","AutoSuggest","Person","jsxDEV","_jsxDEV","PersonInserter","props","_s","people","setPeople","names","setNames","getInitNames","newNames","person","oldSuggestions","push","name","newPeople","includes","getPeople","e","updatePeople","updateList","del","i","splice","children","edit","suggestions","fileName","_jsxFileName","lineNumber","columnNumber","map","className","href","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Jonathan/Documents/ashfrontend/src/Main/PersonInserter.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport AutoSuggest from \"./AutoSuggest\";\r\nimport { Person } from \"../Models/Person\";\r\n\r\nfunction PersonInserter(props) {\r\n    let [people, setPeople] = useState([]);\r\n    let [names, setNames] = useState(\"\");\r\n    \r\n    useEffect(() => {\r\n        getInitNames();\r\n    }, []);\r\n  \r\nlet getInitNames=()=>{\r\n    let newNames=[];\r\n    for(let person of props.oldSuggestions){\r\n        newNames.push(person.name);\r\n    }\r\n    setNames(newNames);\r\n    let newPeople=[];\r\n    for(let person of props.people){\r\n        if( newNames.includes(person.name)){\r\n            newPeople.push(person);\r\n        }\r\n    }\r\n    setPeople(newPeople);\r\n}\r\n    let getPeople = (e) => {\r\n        let newPeople=[];\r\n        for(let person of props.people){\r\n            if( e.includes(person.name)){\r\n                newPeople.push(person);\r\n            }\r\n        }\r\n        setPeople(newPeople);\r\n        props.updatePeople(newPeople);\r\n    };\r\n    let updateList=async(e)=>{\r\n        setNames(e);\r\n        getPeople(e)\r\n    }\r\n    let del = (i) => {\r\n        return () => {\r\n            let newPeople = [...people];\r\n            newPeople.splice(i, 1);\r\n            setPeople(newPeople);\r\n            props.updatePeople(newPeople);\r\n        }\r\n    }\r\n    return( <div>\r\n\r\n        {props.edit==true && <AutoSuggest oldSuggestions={people} suggestions={props.people} updateList={(e)=>{updateList(e)}} />}\r\n        <div>\r\n        {props.edit \r\n            ? \r\n                <div>\r\n                        {people.map((person, i) => (\r\n                            <a className=\"bg-dark text-white\" href=\"#\" onClick={() => del(i)}>{person.name}</a>\r\n                        ))}\r\n                    </div> \r\n            : \r\n            <div>\r\n                {people.map((person, i) => (\r\n                    <div>{person.name}</div>\r\n                ))}\r\n    </div>\r\n}\r\n\r\n        </div>\r\n    </div>);\r\n}\r\nexport default PersonInserter;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}