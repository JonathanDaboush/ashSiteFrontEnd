{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Documents\\\\ashfrontend\\\\src\\\\Main\\\\PersonInserter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport AutoSuggest from \"./AutoSuggest\";\nimport { Person } from \"../Models/Person\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PersonInserter(props) {\n  _s();\n  let [people, setPeople] = useState([]);\n  let [names, setNames] = useState(\"\");\n  let getPeople = () => {\n    let newPeople = [];\n    for (let person of props.people) {\n      if (names.includes(person.name)) {\n        newPeople.push(person);\n      }\n    }\n    setPeople(newPeople);\n    props.updatePeople(newPeople);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.edit == true && /*#__PURE__*/_jsxDEV(AutoSuggest, {\n      oldSuggestions: props.oldSuggestions,\n      suggestions: props.people,\n      updateList: e => {\n        setNames(e);\n        getPeople();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: people.map = (person, i) => /*#__PURE__*/_jsxDEV(Person, {\n        name: person.name,\n        description: person.description,\n        opinions: person.opinions,\n        id: person.id,\n        title: true,\n        upCounter: () => {},\n        edit: false,\n        target: s => {},\n        images: person.images\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }, this);\n}\n_s(PersonInserter, \"g9nEbQZ+A8qKh81bZaWQnw9rWM8=\");\n_c = PersonInserter;\nexport default PersonInserter;\nvar _c;\n$RefreshReg$(_c, \"PersonInserter\");","map":{"version":3,"names":["React","useEffect","useState","AutoSuggest","Person","jsxDEV","_jsxDEV","PersonInserter","props","_s","people","setPeople","names","setNames","getPeople","newPeople","person","includes","name","push","updatePeople","children","edit","oldSuggestions","suggestions","updateList","e","fileName","_jsxFileName","lineNumber","columnNumber","map","i","description","opinions","id","title","upCounter","target","s","images","_c","$RefreshReg$"],"sources":["C:/Users/Jonathan/Documents/ashfrontend/src/Main/PersonInserter.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport AutoSuggest from \"./AutoSuggest\";\r\nimport { Person } from \"../Models/Person\";\r\n\r\nfunction PersonInserter(props) {\r\n    let [people, setPeople] = useState([]);\r\n    let [names, setNames] = useState(\"\");\r\n    \r\n    \r\n\r\n    let getPeople = () => {\r\n        let newPeople=[];\r\n        for(let person of props.people){\r\n            if( names.includes(person.name)){\r\n                newPeople.push(person);\r\n            }\r\n        }\r\n        setPeople(newPeople);\r\n        props.updatePeople(newPeople);\r\n    };\r\n\r\n    return( <div>\r\n\r\n        {props.edit==true && <AutoSuggest oldSuggestions={props.oldSuggestions} suggestions={props.people} updateList={(e)=>{setNames(e);getPeople()}} />}\r\n        <div>\r\n{people.map = ((person,i) => (<Person  name={person.name} description={person.description} \r\n                        opinions={person.opinions} id={person.id}  title={true}  key={i}\r\n                        upCounter={() => {}} edit={false} \r\n                    target={(s) => {}}  images={person.images}\r\n                    />))}\r\n        </div>\r\n    </div>);\r\n}\r\nexport default PersonInserter;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,cAAcA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC3B,IAAI,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,IAAI,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAIpC,IAAIY,SAAS,GAAGA,CAAA,KAAM;IAClB,IAAIC,SAAS,GAAC,EAAE;IAChB,KAAI,IAAIC,MAAM,IAAIR,KAAK,CAACE,MAAM,EAAC;MAC3B,IAAIE,KAAK,CAACK,QAAQ,CAACD,MAAM,CAACE,IAAI,CAAC,EAAC;QAC5BH,SAAS,CAACI,IAAI,CAACH,MAAM,CAAC;MAC1B;IACJ;IACAL,SAAS,CAACI,SAAS,CAAC;IACpBP,KAAK,CAACY,YAAY,CAACL,SAAS,CAAC;EACjC,CAAC;EAED,oBAAQT,OAAA;IAAAe,QAAA,GAEHb,KAAK,CAACc,IAAI,IAAE,IAAI,iBAAIhB,OAAA,CAACH,WAAW;MAACoB,cAAc,EAAEf,KAAK,CAACe,cAAe;MAACC,WAAW,EAAEhB,KAAK,CAACE,MAAO;MAACe,UAAU,EAAGC,CAAC,IAAG;QAACb,QAAQ,CAACa,CAAC,CAAC;QAACZ,SAAS,CAAC,CAAC;MAAA;IAAE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjJxB,OAAA;MAAAe,QAAA,EACPX,MAAM,CAACqB,GAAG,GAAI,CAACf,MAAM,EAACgB,CAAC,kBAAM1B,OAAA,CAACF,MAAM;QAAEc,IAAI,EAAEF,MAAM,CAACE,IAAK;QAACe,WAAW,EAAEjB,MAAM,CAACiB,WAAY;QAClEC,QAAQ,EAAElB,MAAM,CAACkB,QAAS;QAACC,EAAE,EAAEnB,MAAM,CAACmB,EAAG;QAAEC,KAAK,EAAE,IAAK;QACvDC,SAAS,EAAEA,CAAA,KAAM,CAAC,CAAE;QAACf,IAAI,EAAE,KAAM;QACrCgB,MAAM,EAAGC,CAAC,IAAK,CAAC,CAAE;QAAEC,MAAM,EAAExB,MAAM,CAACwB;MAAO,GAFwBR,CAAC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGlE;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AACV;AAACrB,EAAA,CA5BQF,cAAc;AAAAkC,EAAA,GAAdlC,cAAc;AA6BvB,eAAeA,cAAc;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}